#!/usr/bin/env Rscript

# Copyright (c) 2017 Michael Roach (Australian Wine Research Institute)
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in all
# copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
# SOFTWARE.

require(ggplot2)

usage = "
USAGE:

dot_plot_plus.Rscript   out.png   q-ctg-name q-ctg-len contig.cov   r1-ctg-name r1.rdotplot r1-len   [ r2-ctg-name r2.rdotplot r2-len ]

arguments are positional because lazy

out.png         output png image file of the dotplot with coverage hist
q-ctg-name      name of query contig
q-ctg-len       length of the query contig
contig.cov      input window coverage hist .tsv file generated by purge_haplotigs
r1-ctg-name     name of first ref contig
r1.rdotplot     lastz rdotplot output for query contig against first reference
r1-len          length of the r1 contig
r2-ctg-name     name of second ref contig
r2.rdotplot     second reference lastz-rdotplot
r2-len          length of the r2 contig

"

args = commandArgs(trailingOnly = T)

if (length(args)<7){
    cat(usage)
    stop()
}

# initialize values
ref2 = FALSE


# parse args
q_ctg = args[2]
q_len = as.integer(args[3])
q_cov = read.table(args[4], header = F)
r1_ctg = args[5]
r1_dat = read.table(args[6], header = F)

r1_len = as.integer(args[7])
if (length(args) == 10){
    r2_ctg = args[8]
    r2_dat = read.table(args[9], header = F)

    r2_len = as.integer(args[10])
    ref2 = TRUE
}


# annotation padding
padding = -0.05 * q_len

# table headers
names(q_cov) = c("X", "Y")
names(r1_dat) = c("X", "Y")
if (ref2){
    names(r2_dat) = c("X", "Y")
}

# cov span = -1.5 to 1.5
# dotplot1 = 1.5 to 3.5
# dotplot2 = 3.5 to 5.5


# convert the y-spans to 0-1 and apply offsets
r1_dat$Y = ((r1_dat$Y / r1_len) * 2) + 1.5
if (ref2){
    r2_dat$Y = ((r2_dat$Y / r2_len) * 2) + 3.5
}


if (ref2){
    #png(filename = args[1], width = 1000, height = 1500, units = "px")
    
    ggplot() + 
        geom_path(aes(x=r1_dat$X,y=r1_dat$Y),size=0.5) +
        geom_path(aes(x=r2_dat$X,y=r2_dat$Y),size=0.5) +
        geom_point(aes(x=q_cov$X,y=q_cov$Y)) +
        geom_path(aes(x=c(0,q_len),y=c(-1.5,-1.5)),color='grey') +
        geom_path(aes(x=c(0,q_len),y=c(1.5,1.5)),color='grey') +
        geom_path(aes(x=c(0,q_len),y=c(3.5,3.5)),color='grey') +
        geom_path(aes(x=c(0,0),y=c(-1.5,5.5)),color='grey') +
        annotate("text", x=padding, y=0, label= "log2(read-depth)",angle=90) +
        annotate("text", x=padding, y=2, label=r1_ctg,angle=90) +
        annotate("text", x=padding, y=4, label=r2_ctg,angle=90) +
        scale_x_continuous(name=q_ctg) +
        theme(panel.background=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank(),axis.title.y=element_blank())
} else {
    #png(filename = args[1], width = 1000, height = 1000, units = "px")
    
    ggplot() + 
        geom_path(aes(x=r1_dat$X,y=r1_dat$Y),size=0.5) +
        geom_point(aes(x=q_cov$X,y=q_cov$Y)) +
        geom_path(aes(x=c(0,q_len),y=c(-1.5,-1.5)),color='grey') +
        geom_path(aes(x=c(0,q_len),y=c(1.5,1.5)),color='grey') +
        geom_path(aes(x=c(0,0),y=c(-1.5,3.5)),color='grey') +
        annotate("text", x=padding, y=0, label= "log2(read-depth)",angle=90) +
        annotate("text", x=padding, y=2, label=r1_ctg,angle=90) +
        scale_x_continuous(name=q_ctg) +
        theme(panel.background=element_blank(),axis.text.y=element_blank(),axis.ticks.y=element_blank(),axis.title.y=element_blank())
}

ggsave(gsub(".png", ".pdf", args[1]), width = 10, height = 8, dpi = 150)

